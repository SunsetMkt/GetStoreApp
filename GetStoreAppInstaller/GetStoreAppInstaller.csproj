<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AnalysisLevel>latest</AnalysisLevel>
    <AssemblyName>GetStoreAppInstaller</AssemblyName>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <CsWinRTEnableDynamicObjectsSupport>false</CsWinRTEnableDynamicObjectsSupport>
    <DebuggerSupport>false</DebuggerSupport>
    <DebugType>none</DebugType>
    <DefaultXamlRuntime>UAP</DefaultXamlRuntime>
    <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    <Deterministic>true</Deterministic>
    <DesktopCompatible>true</DesktopCompatible>
    <DisableXbfLineInfo>false</DisableXbfLineInfo>
    <ForceAotCompile>true</ForceAotCompile>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
    <ImplicitUsings>disable</ImplicitUsings>
    <IncludeAllContentForSelfExtract>false</IncludeAllContentForSelfExtract>
    <IncludeSymbols>false</IncludeSymbols>
    <IsAotCompatible>true</IsAotCompatible>
    <LangVersion>latest</LangVersion>
    <MileXamlNoSunValleyXamlStyle>true</MileXamlNoSunValleyXamlStyle>
    <MetadataUpdaterSupport>false</MetadataUpdaterSupport>
    <MetricsSupport>false</MetricsSupport>
    <OptimizationPreference>Size</OptimizationPreference>
    <Optimize>false</Optimize>
    <OutputType>WinExe</OutputType>
    <Platforms>x86;x64;ARM64</Platforms>
    <PublishAot>true</PublishAot>
    <RootNamespace>GetStoreAppInstaller</RootNamespace>
    <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
    <_SuppressWinFormsTrimError>true</_SuppressWinFormsTrimError>
    <TargetFramework>net9.0-windows10.0.26100.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
    <TrimmerRemoveSymbols>true</TrimmerRemoveSymbols>
    <UseUwpTools>true</UseUwpTools>
    <UseWindowsForms>true</UseWindowsForms>
    <Win32Resource>GetStoreAppInstaller.res</Win32Resource>
    <WindowsSdkPackageVersion>10.0.26100.48</WindowsSdkPackageVersion>
    <XmlResolverIsNetworkingEnabledByDefault>false</XmlResolverIsNetworkingEnabledByDefault>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='x86'">
    <RuntimeIdentifier>win-x86</RuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)'=='x64'">
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)'=='ARM64'">
    <RuntimeIdentifier>win-arm64</RuntimeIdentifier>
  </PropertyGroup>
  <ItemGroup>
    <ApplicationDefinition Include="XamlIslandsApp.xaml" />
    <Content Remove="Styles\Mile.Xaml.Styles.SunValley.xbf" />
    <MyEmbeddedItems Include="Styles\Mile.Xaml.Styles.SunValley.xbf" />
    
    <!-- Temporary workaround, remove when https://github.com/dotnet/sdk/pull/41936 is available in the .NET SDK -->
    <CompilerVisibleProperty Include="CsWinRTUseWindowsUIXamlProjections" />
    <RuntimeHostConfigurationOption Include="CSWINRT_USE_WINDOWS_UI_XAML_PROJECTIONS" Value="$(CsWinRTUseWindowsUIXamlProjections)" Trim="true" />

    <Manifest Include="$(ApplicationManifest)" />

    <None Remove="TestPage.xaml" />
    <None Remove="XamlIslandsApp.xaml" />

    <Page Update="TestPage.xaml" XamlRuntime="$(DefaultXamlRuntime)" />
    <Page Remove="XamlIslandsApp.xaml" />

    <PackageReference Include="DisposableMemory.ModernNetUAP.XamlCompiler" Version="0.2.3" />
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.1.5" />
    <PackageReference Include="Mile.Xaml" Version="2.3.1064" GeneratePathProperty="True" />
  </ItemGroup>

  <!-- 测试 AOT 发布后的文件 -->
  <Target Name="AutoPublish" AfterTargets="AfterBuild" Condition="'$(Configuration)|$(ForceAotCompile)|$(PublishAot)' == 'Debug|true|true'">
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="Publish" />
    <Copy SourceFiles="$(NativeOutputPath)$(AssemblyName).exe" DestinationFiles="$(ProjectDir)obj\$(Platform)\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\apphost.exe" />
  </Target>

  <!-- 捆绑前对二进制文件进行后处理 -->
  <Target Name="DigitialSignGeneratedExeFile" AfterTargets="GenerateSingleFileBundle" DependsOnTargets="PrepareForBundle" Condition="'$(Configuration)|$(ForceAotCompile)|$(PublishAot)' == 'Release|true|true'">
    <!-- 对生成的 GetStoreAppInstaller.exe 文件进行数字签名 -->
    <Exec Command="$(SolutionDir)signtool.exe sign /f $(SolutionDir)GetStoreAppPackage\GetStoreAppPackage_SignKey.pfx /t http://timestamp.digicert.com /fd SHA256 $(NativeOutputPath)$(AssemblyName).exe" />
  </Target>

  <Target Name="AddMyEmbeddedItems" BeforeTargets="_GenerateProjectPriFileCore" AfterTargets="_CalculateInputsForGenerateProjectPriFileCore">
    <Copy SourceFiles="@(MyEmbeddedItems)" DestinationFiles="@(MyEmbeddedItems->'$(IntermediateOutputPath)embed\Styles\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <ReadLinesFromFile File="$(_EmbedFileResfilePath)">
      <Output TaskParameter="Lines" ItemName="ItemsFromFile" />
    </ReadLinesFromFile>
    <ItemGroup>
      <MyEmbeddedFileList Include="@(ItemsFromFile)" />
      <MyEmbeddedFileList Include="@(MyEmbeddedItems)" />
    </ItemGroup>
    <WriteLinesToFile File="$(_EmbedFileResfilePath)" Lines="@(MyEmbeddedFileList)" Overwrite="true" Encoding="Unicode" />
  </Target>

  <!-- 复制 Mile.Xaml.Styles.SunValley.xbf 所需要的文件到输出根目录 -->
  <Target Name="CopyXBFToTargetDir" BeforeTargets="BeforeBuild">
    <Copy SourceFiles="$(PkgMile_Xaml)\Redist\Styles\Mile.Xaml.Styles.SunValley.xbf" DestinationFolder="Styles" />
  </Target>
</Project>